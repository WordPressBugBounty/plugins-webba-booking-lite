{"version":3,"file":"store/index.js","mappings":";;;;;;;;;;AAAA,0C;;;;;;;;;;ACAA,sC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;;;;;;ACN2C;AACiB;AAE5D,MAAMG,aAAa,GAAG;EAClBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,OAAO,GAAG;EACZC,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACnB,OAAO;MACHC,IAAI,EAAE,WAAW;MACjBF,KAAK;MACLC;IACJ,CAAC;EACL,CAAC;EACDE,OAAO,EACHA,CAACH,KAAK,EAAEI,IAAI,KACZ,OAAO;IAAEC;EAAS,CAAC,KAAK;IACpB,MAAMC,MAAM,GAAG,MAAMb,2DAAQ,CAAC;MAC1Bc,IAAI,EAAE,wBAAwB;MAC9BC,MAAM,EAAE,MAAM;MACdJ,IAAI,EAAE;QACFJ,KAAK,EAAEA,KAAK;QACZI,IAAI,EAAEA;MACV;IACJ,CAAC,CAAC;IACFC,QAAQ,CAAC;MAAEH,IAAI,EAAE,UAAU;MAAEF,KAAK,EAAEA,KAAK;MAAEI,IAAI,EAAEA;IAAK,CAAC,CAAC;EAC5D,CAAC;EACLK,OAAO,EACHA,CAACT,KAAK,EAAEI,IAAI,KACZ,OAAO;IAAEC;EAAS,CAAC,KAAK;IACpB,MAAMC,MAAM,GAAG,MAAMb,2DAAQ,CAAC;MAC1Bc,IAAI,EAAE,wBAAwB;MAC9BC,MAAM,EAAE,MAAM;MACdJ,IAAI,EAAE;QACFJ,KAAK,EAAEA,KAAK;QACZI,IAAI,EAAEA;MACV;IACJ,CAAC,CAAC;IACFC,QAAQ,CAAC;MAAEH,IAAI,EAAE,UAAU;MAAEF,KAAK,EAAEA,KAAK;MAAEI,IAAI,EAAEA;IAAK,CAAC,CAAC;EAC5D,CAAC;EACLM,WAAW,EACPA,CAACV,KAAK,EAAEW,GAAG,KACX,OAAO;IAAEN;EAAS,CAAC,KAAK;IACpB,MAAMC,MAAM,GAAG,MAAMb,2DAAQ,CAAC;MAC1Bc,IAAI,EAAE,2BAA2B;MACjCC,MAAM,EAAE,MAAM;MACdJ,IAAI,EAAE;QACFJ,KAAK,EAAEA,KAAK;QACZW,GAAG,EAAEA;MACT;IACJ,CAAC,CAAC;IACFN,QAAQ,CAAC;MAAEH,IAAI,EAAE,cAAc;MAAEF,KAAK,EAAEA,KAAK;MAAEW,GAAG,EAAEA;IAAI,CAAC,CAAC;EAC9D;AACR,CAAC;AACD,MAAMC,KAAK,GAAGlB,iEAAgB,CAAC,0BAA0B,EAAE;EACvDmB,OAAOA,CAACC,KAAK,GAAGlB,aAAa,EAAEmB,MAAM,EAAE;IACnC,QAAQA,MAAM,CAACb,IAAI;MACf,KAAK,WAAW;QACZ,QAAQa,MAAM,CAACf,KAAK;UAChB,KAAK,UAAU;YACX,OAAO;cACH,GAAGc,KAAK;cACRjB,QAAQ,EAAEkB,MAAM,CAACd;YACrB,CAAC;QACT;MACJ,KAAK,UAAU;QACX,QAAQc,MAAM,CAACf,KAAK;UAChB,KAAK,UAAU;YACX,MAAMgB,eAAe,GAAGF,KAAK,CAACjB,QAAQ,CAACoB,GAAG,CAAEC,OAAO,IAC/CA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACX,IAAI,CAACe,EAAE,GACvB;cAAE,GAAGD,OAAO;cAAE,GAAGH,MAAM,CAACX;YAAK,CAAC,GAC9Bc,OACV,CAAC;YACD,OAAO;cACH,GAAGJ,KAAK;cACRjB,QAAQ,EAAEmB;YACd,CAAC;QACT;MACJ,KAAK,UAAU;QACX,QAAQD,MAAM,CAACf,KAAK;UAChB,KAAK,UAAU;YACX,MAAMgB,eAAe,GAAGF,KAAK,CAACjB,QAAQ;YACtCmB,eAAe,CAACI,IAAI,CAACL,MAAM,CAACX,IAAI,CAAC;YACjC,OAAO;cACH,GAAGU,KAAK;cACRjB,QAAQ,EAAEmB;YACd,CAAC;QACT;MACJ,KAAK,cAAc;QACf,QAAQD,MAAM,CAACf,KAAK;UAChB,KAAK,UAAU;YACX,MAAMqB,WAAW,GAAGN,MAAM,CAACX,IAAI,CAACO,GAAG;YACnC,MAAMW,gBAAgB,GAAGR,KAAK,CAACjB,QAAQ,CAAC0B,MAAM,CACzCL,OAAO,IAAK,CAACG,WAAW,CAACG,QAAQ,CAACN,OAAO,CAACC,EAAE,CACjD,CAAC;YACD,OAAO;cACH,GAAGL,KAAK;cACRjB,QAAQ,EAAEyB;YACd,CAAC;QACT;IACR;IAEA,OAAOR,KAAK;EAChB,CAAC;EACDhB,OAAO;EACP2B,SAAS,EAAE;IACPC,QAAQ,EAAEA,CAACZ,KAAK,EAAEd,KAAK,KAAK;MACxB,QAAQA,KAAK;QACT,KAAK,UAAU;UACX,OAAOc,KAAK,CAACjB,QAAQ;UACrB;AAAA;MACR;IACJ,CAAC;IACD8B,iBAAiBA,CAACb,KAAK,EAAE,CAAC;EAC9B,CAAC;EAEDc,SAAS,EAAE;IACPF,QAAQ,EACH1B,KAAK,IACN,OAAO;MAAEK;IAAS,CAAC,KAAK;MACpB,MAAMwB,MAAM,GAAG;QACX7B,KAAK,EAAEA;MACX,CAAC;MACD,MAAM8B,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;MAC1D,MAAM1B,MAAM,GAAG,MAAMb,2DAAQ,CAAC;QAC1Bc,IAAI,EAAE,0BAA0BuB,WAAW;MAC/C,CAAC,CAAC;MACFzB,QAAQ,CAACN,QAAQ,CAAC,UAAU,EAAEO,MAAM,CAAC;IACzC;EACR;AACJ,CAAC,CAAC;AAEFX,yDAAQ,CAACiB,KAAK,CAAC;AAER,MAAMqB,UAAU,GAAG,0BAA0B;AAC7C,MAAMC,aAAa,GAAGtC,aAAa,C","sources":["webpack://webba-booking/external window [\"wp\",\"apiFetch\"]","webpack://webba-booking/external window [\"wp\",\"data\"]","webpack://webba-booking/webpack/bootstrap","webpack://webba-booking/webpack/runtime/compat get default export","webpack://webba-booking/webpack/runtime/define property getters","webpack://webba-booking/webpack/runtime/hasOwnProperty shorthand","webpack://webba-booking/webpack/runtime/make namespace object","webpack://webba-booking/./src/store/backend/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import apiFetch from '@wordpress/api-fetch'\nimport { createReduxStore, register } from '@wordpress/data'\n\nconst DEFAULT_STATE = {\n    services: [],\n}\n\nconst actions = {\n    setItems(model, items) {\n        return {\n            type: 'SET_ITEMS',\n            model,\n            items,\n        }\n    },\n    setItem:\n        (model, data) =>\n        async ({ dispatch }) => {\n            const result = await apiFetch({\n                path: `/wbkdata/v1/save-item/`,\n                method: 'POST',\n                data: {\n                    model: model,\n                    data: data,\n                },\n            })\n            dispatch({ type: 'SET_ITEM', model: model, data: data })\n        },\n    addItem:\n        (model, data) =>\n        async ({ dispatch }) => {\n            const result = await apiFetch({\n                path: `/wbkdata/v1/save-item/`,\n                method: 'POST',\n                data: {\n                    model: model,\n                    data: data,\n                },\n            })\n            dispatch({ type: 'ADD_ITEM', model: model, data: data })\n        },\n    deleteItems:\n        (model, ids) =>\n        async ({ dispatch }) => {\n            const result = await apiFetch({\n                path: `/wbkdata/v1/delete-items/`,\n                method: 'POST',\n                data: {\n                    model: model,\n                    ids: ids,\n                },\n            })\n            dispatch({ type: 'DELETE_ITEMS', model: model, ids: ids })\n        },\n}\nconst store = createReduxStore('webba_booking/data_store', {\n    reducer(state = DEFAULT_STATE, action) {\n        switch (action.type) {\n            case 'SET_ITEMS':\n                switch (action.model) {\n                    case 'services':\n                        return {\n                            ...state,\n                            services: action.items,\n                        }\n                }\n            case 'SET_ITEM':\n                switch (action.model) {\n                    case 'services':\n                        const updatedServices = state.services.map((service) =>\n                            service.id === action.data.id\n                                ? { ...service, ...action.data }\n                                : service\n                        )\n                        return {\n                            ...state,\n                            services: updatedServices,\n                        }\n                }\n            case 'ADD_ITEM':\n                switch (action.model) {\n                    case 'services':\n                        const updatedServices = state.services\n                        updatedServices.push(action.data)\n                        return {\n                            ...state,\n                            services: updatedServices,\n                        }\n                }\n            case 'DELETE_ITEMS':\n                switch (action.model) {\n                    case 'services':\n                        const idsToRemove = action.data.ids\n                        const filteredServices = state.services.filter(\n                            (service) => !idsToRemove.includes(service.id)\n                        )\n                        return {\n                            ...state,\n                            services: filteredServices,\n                        }\n                }\n        }\n\n        return state\n    },\n    actions,\n    selectors: {\n        getItems: (state, model) => {\n            switch (model) {\n                case 'services':\n                    return state.services\n                    break\n            }\n        },\n        getBookingsByUser(state) {},\n    },\n\n    resolvers: {\n        getItems:\n            (model) =>\n            async ({ dispatch }) => {\n                const params = {\n                    model: model,\n                }\n                const queryString = new URLSearchParams(params).toString()\n                const result = await apiFetch({\n                    path: `/wbkdata/v1/get-items/?${queryString}`,\n                })\n                dispatch.setItems('services', result)\n            },\n    },\n})\n\nregister(store)\n\nexport const store_name = 'webba_booking/data_store'\nexport const default_state = DEFAULT_STATE\n"],"names":["apiFetch","createReduxStore","register","DEFAULT_STATE","services","actions","setItems","model","items","type","setItem","data","dispatch","result","path","method","addItem","deleteItems","ids","store","reducer","state","action","updatedServices","map","service","id","push","idsToRemove","filteredServices","filter","includes","selectors","getItems","getBookingsByUser","resolvers","params","queryString","URLSearchParams","toString","store_name","default_state"],"sourceRoot":""}